<configuration>
  <system.webServer>
    <handlers>
      <add name="iisnode" path="server.js" verb="*" modules="iisnode" />
    </handlers>

    <rewrite>
      <rules>
        <!-- Redireciona tudo para server.js -->
        <rule name="NodeApp" stopProcessing="true">
          <match url=".*" />
          <conditions logicalGrouping="MatchAll">
            <add input="{REQUEST_FILENAME}" matchType="IsFile" negate="true" />
            <add input="{REQUEST_FILENAME}" matchType="IsDirectory" negate="true" />
          </conditions>
          <action type="Rewrite" url="server.js" />
        </rule>
      </rules>
    </rewrite>
  </system.webServer>
</configuration>


const express = require('express');
const path = require('path');
const app = express();
const PORT = process.env.PORT || 3000;

// Rota protegida
app.get('/', (req, res) => {
  // Exemplo: redireciona se não autenticado
  if (!req.headers.cookie?.includes('BBSSOToken')) {
    const redirectUrl = `https://login.intranet.bb.com.br/sso/oauth2/authorize?client_id=superfeira&response_type=code&redirect_uri=https://superfeira.intranet.bb.com.br/auth/callback/bb&scope=bbprofile`;
    return res.redirect(redirectUrl);
  }

  res.sendFile(path.join(__dirname, 'dist', 'index.html'));
});

// Callback OAuth2
app.get('/auth/callback/bb', (req, res) => {
  const code = req.query.code;
  if (!code) return res.status(400).send('Code ausente.');

  // Aqui você colocará o fluxo real com axios, etc.
  res.send(`Código recebido: ${code}`);
});

// Servir arquivos estáticos
app.use(express.static(path.join(__dirname, 'dist')));

// Start do servidor
app.listen(PORT, () => {
  console.log(`Servidor rodando na porta ${PORT}`);
});



console.log("Content-Type: text/plain");
console.log("");
console.log("Hello from Node.js via iisnode!");

<configuration>
  <system.webServer>
    <handlers>
      <add name="iisnode" path="hello.js" verb="*" modules="iisnode"/>
    </handlers>
    <rewrite>
      <rules>
        <rule name="NodeHello" stopProcessing="true">
          <match url="hello" />
          <action type="Rewrite" url="hello.js" />
        </rule>
      </rules>
    </rewrite>
  </system.webServer>
</configuration>


=============



var http = require('http');

http.createServer(function (req, res) {
  res.writeHead(200, { 'Content-Type': 'text/plain' });
  res.end('Hello from iisnode!\n');
}).listen(process.env.PORT);


<configuration>
  <system.webServer>
    <handlers>
      <add name="iisnode" path="hello.js" verb="*" modules="iisnode" />
    </handlers>
    <rewrite>
      <rules>
        <rule name="iisnode">
          <match url=".*" />
          <action type="Rewrite" url="hello.js" />
        </rule>
      </rules>
    </rewrite>
  </system.webServer>
</configuration>

iisnodetest



HTTP Error 500.19 - Internal Server Error
The requested page cannot be accessed because the related configuration data for the page is invalid.
Detailed Error Information:
Module	   IIS Web Core
Notification	   BeginRequest
Handler	   Not yet determined
Error Code	   0x80070021
Config Error	   This configuration section cannot be used at this path. This happens when the section is locked at a parent level. Locking is either by default (overrideModeDefault="Deny"), or set explicitly by a location tag with overrideMode="Deny" or the legacy allowOverride="false".
Config File	   \\?\C:\workspace\teste\web.config
Requested URL	   http://localhost:8080/hello
Physical Path	   C:\workspace\teste\hello
Logon Method	   Not yet determined
Logon User	   Not yet determined
Config Source:

    2:   <system.webServer>
    3:     <handlers>
    4:       <add name="iisnode" path="hello.js" verb="*" modules="iisnode" />




